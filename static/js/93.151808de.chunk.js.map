{"version":3,"file":"static/js/93.151808de.chunk.js","mappings":"oJACMA,E,OAAeC,GAAAA,OAAH,8oBAwBlB,K,qCCxBMC,E,OAAgBD,GAAAA,IAAD,4CAIrB,K,sDCHME,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qFAMhB,K,iKCAMI,EAAcJ,EAAAA,GAAAA,MAAH,2XAeXK,EAAKL,EAAAA,GAAAA,KAAD,0DAmDV,UA/CmB,WAAO,IAAD,EACvB,GAAwCM,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MA2BjB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,yCAAG,gGACZJ,GAAW,GADC,mBAGQK,EAAAA,EAAAA,IAAaX,GAHrB,OAGJY,EAHI,OAIVR,EAAW,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAKC,SAJP,gDAOVC,QAAQC,IAAI,aAAZ,MAPU,yBASVT,GAAW,GATD,4EAAH,qDAaPN,GAASU,GACd,GAAC,CAACV,KAKD,2BACE,UAAC,IAAD,YACA,UAACJ,EAAD,CAAMoB,SA7BW,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfrB,EAAgB,CAAEC,MAAOmB,EAAKE,SAASC,OAAOC,QAC9CJ,EAAKK,OACR,EAwBK,WACF,kBAAOC,QAAQ,YACX,SAAC9B,EAAD,CAAa+B,KAAK,OAAOC,KAAK,SAASC,GAAG,SAASC,UAAQ,KAC3D,SAAC,IAAD,CAAcH,KAAK,SAAnB,wBAEF,0BACGrB,IAAS,SAAC,IAAD,IACU,KAAX,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAU2B,UAAV,OAAwB3B,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAU4B,KAAI,gBAAGC,EAAH,EAAGA,MAAMJ,EAAT,EAASA,GAAT,OAAmB,yBAAa,SAAC,IAAD,CAAYK,MAAO,CAACC,KAAK3B,GAAW4B,GAAE,kBAAaP,GAAnD,SAA0DI,KAA9DJ,EAA5B,YAI9C,C","sources":["components/Button.jsx","components/Container.jsx","components/StyledLink.jsx","pages/MoviePages.jsx"],"sourcesContent":["import styled from \"styled-components\"\nconst StyledButton = styled.button`\n   border: none;\n    border-radius: 4px;\n    box-sizing: border-box;\n    display: inline-block;\n    font-family: BlinkMacSystemFont,-apple-system,Arial,Segoe UI,Roboto,Helvetica,sans-serif;\n    margin: 15px;\n    outline: none;\n    position: relative;\n    text-align: center;\n    transition-duration: .2s;\n    transition-property: color,background-color,border-color;\n    transition-timing-function: ease-in-out; \n    color: grey;\n    background-color: orangered;\n    padding: 10px 20px;\n    border-radius: 0 3px 3px 0;\n    \n &:hover {\n    cursor: pointer;\n    background-color: #00a046;\n    color: #fff;\n  }\n`\nexport default StyledButton","import styled from \"styled-components\";\nconst StyledContainer=styled.div`\n   margin: 20px;\n\n`\nexport default StyledContainer","import styled from \"styled-components\"\nimport { Link } from \"react-router-dom\"\nconst StyledLink = styled(Link)`\n    color:#000;\n    &:hover{\n        color:orange;\n    }\n`\nexport default StyledLink","import { useSearchParams ,useLocation} from \"react-router-dom\"\nimport { fetchByQuery } from \"components/helpers/ApiService\";\nimport { useEffect,useState } from \"react\";\nimport StyledButton from \"components/Button\";\nimport Loader from \"components/Loader\";\nimport styled from \"styled-components\";\nimport StyledContainer from \"components/Container\";\nimport StyledLink from \"components/StyledLink\";\nconst StyledInput = styled.input`\n\n    margin: 0 auto;\n    padding-left: 40px;\n    width: 300px;\n    height: 40px;\n    border: none;\n    border-radius: 5px;\n    font-size: 15px;\n    background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,121,95,1) 30%, rgba(0,212,255,1) 100%);\n    box-sizing: border-box;\n    padding-left: 12px;\n    padding-right: 12px;\n    color:#fff;\n`\nconst Form=styled.form`\n width: 500px;\n margin: 0 auto;\n`\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams()\n  const query = searchParams.get(\"query\") ?? \"\";\n  const [filmList, setFilmList] = useState([])\n  const [loading, setLoading] = useState(false)\n  const location = useLocation()\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.search.value });\n    form.reset();\n}\n\n  useEffect(() => {\n    const fetch = async () => {\n      setLoading(true)\n      try {\n        const res = await fetchByQuery(query)\n        setFilmList(res?.results)\n\n      } catch (error) {\n        console.log('error :>> ', error);\n      } finally {\n        setLoading(false)\n      }\n\n    }\n    if (query) { fetch() }\n  },[query])\n\n\n\n  return (\n    <main>\n      <StyledContainer>\n      <Form onSubmit={handleSubmit}>\n    <label htmlFor=\"search\"></label>\n        <StyledInput type=\"text\" name=\"search\" id=\"search\" required />\n        <StyledButton type=\"submit\">search</StyledButton>\n      </Form>\n      <ul>\n        {loading&&<Loader/>}\n        {filmList?.length!==0 && filmList?.map(( {title,id} ) => (<li key={id}><StyledLink state={{from:location}} to={`/movies/${id}`}>{title}</StyledLink></li>))}\n        </ul>\n        </StyledContainer>\n  </main>)\n}\nexport default MoviesPage"],"names":["StyledButton","styled","StyledContainer","StyledLink","Link","StyledInput","Form","useSearchParams","searchParams","setSearchParams","query","get","useState","filmList","setFilmList","loading","setLoading","location","useLocation","useEffect","fetch","fetchByQuery","res","results","console","log","onSubmit","e","preventDefault","form","currentTarget","elements","search","value","reset","htmlFor","type","name","id","required","length","map","title","state","from","to"],"sourceRoot":""}