{"version":3,"file":"static/js/597.bfbfb0da.chunk.js","mappings":"kOA0EA,UA3Ca,WAAO,IAAD,EACTA,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACVD,GAAW,GACP,IAAME,EAAK,yCAAG,mHAGIC,EAAAA,EAAAA,GAAUT,GAHd,OAGRU,EAHQ,OAIdN,EAAQM,GAJM,gDAMdC,QAAQC,IAAI,QAAZ,MANc,yBASbN,GAAW,GATE,4EAAH,qDAcdE,GACA,GAAE,CAACR,IAEN,IAAMa,EAAK,OAACV,QAAD,IAACA,OAAD,EAACA,EAAMA,KAAKW,KAAI,SAAAC,GACnB,OAAO,2BACL,yBACGA,EAAGC,cACJ,gBAAKC,IAAG,0CAAqCF,EAAGC,aAAxC,oBArDJ,oCAqD+EE,IAAI,WACnF,gBAAKD,IAAKE,EAAYD,IAAKH,EAAGK,KAAMC,MAAO,SAEjD,uBAAIN,EAAGK,QACT,wCAAiBL,EAAGO,eAPJP,EAAGQ,GAS1B,IAEC,OAAQ,gCACLlB,IAAW,SAAC,IAAD,KACZ,wBAA4B,KAAnB,OAAJF,QAAI,IAAJA,GAAA,UAAAA,EAAMA,YAAN,eAAYqB,SACd,oEACAX,MAEN,C","sources":["components/Cast.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchCast } from \"./helpers/ApiService\";\nimport { useParams } from \"react-router-dom\";\n\nimport Loader from \"./Loader\";\nimport defaultImg from '../defaultImg.jpeg'\nconst API_KEY = '2fbaf0abda7e75b14a06c1d021f41a8b'\n\n// const useLoading = () => {\n//   const [loading, setLoading] = useState(false)\n//   useEffect(() => {\n     \n//     const load = async () => {\n//       setLoading(true)\n//       try {\n\n//       } catch (error) {\n//         console.log('error', error)\n//       }\n//       finally {\n//         setLoading(false)\n//       }\n//     }\n//       load()\n//   },[])\n// return loading\n\n\n// }\n\n\nconst Cast = () => {\n  const { filmId } = useParams()\n  const [cast, setCast] = useState(null)\n  const [loading, setLoading] = useState(false)\n  \n  useEffect(() => {\n  setLoading(true)  \n      const fetch = async() => {\n         \n    try {\n      const res = await fetchCast(filmId)\n      setCast(res)\n    } catch (error) {\n      console.log('error', error)\n    }\n    finally {\n       setLoading(false)\n    }\n    }\n   \n\n   fetch()\n  }, [filmId])\n\nconst casts=cast?.cast.map(el => {\n        return <li key={el.id}>\n          <div>\n            {el.profile_path ?\n            <img src={`https://image.tmdb.org/t/p/w300/${el.profile_path}?api_key=${API_KEY}`} alt='test ' />\n              : <img src={defaultImg} alt={el.name} width={300} />}\n          </div>\n          <p>{el.name}</p>\n        <p>Character : { el.character}</p> \n      </li>\n})\n  \n  return (<>\n    {loading && <Loader />}\n    <ul>{cast?.cast?.length === 0\n      ?<div>We do not have any  cast on this movie</div>\n      :casts}\n    </ul></>)\n}\nexport default Cast"],"names":["filmId","useParams","useState","cast","setCast","loading","setLoading","useEffect","fetch","fetchCast","res","console","log","casts","map","el","profile_path","src","alt","defaultImg","name","width","character","id","length"],"sourceRoot":""}