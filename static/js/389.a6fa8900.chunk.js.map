{"version":3,"file":"static/js/389.a6fa8900.chunk.js","mappings":"qJACMA,E,OAAeC,GAAAA,OAAH,8oBAwBlB,K,qCCxBMC,E,OAAgBD,GAAAA,IAAD,4CAIrB,K,sICIME,EAAoBF,EAAAA,GAAAA,IAAD,4CAGnBG,EAAkBH,EAAAA,GAAAA,IAAD,8DAwCvB,UAnCyB,WAAO,IAAD,EACnBI,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA4BE,EAAAA,EAAAA,GAAmBC,EAAAA,GAAgBH,GAAvDI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UACRC,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,IAG9BG,EAAkEP,EAAlEO,aAAaC,EAAqDR,EAArDQ,aAAaC,EAAwCT,EAAxCS,MAAMC,EAAkCV,EAAlCU,YAAYC,EAAsBX,EAAtBW,KAAKC,EAAiBZ,EAAjBY,SAASC,EAAQb,EAARa,OAC3DC,EAAS,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAcQ,MAAM,IAAIC,MAAM,EAAG,GAC7CC,EAAYC,OAAsB,GAAfV,GAAmBQ,MAAM,EAAG,GAEpD,OACI,UAAC,IAAD,YAAiB,SAAC,IAAD,CAAcG,QAPrB,kBAAMjB,EAASE,EAAf,EAOO,oBACZH,IAAW,SAAC,IAAD,IAChBD,IAAO,iCACJ,UAACN,EAAD,YAAqB,4BAAK,0BAAKe,EAAL,KAAcK,EAAd,QAC1B,yCAAiBG,EAAjB,QAECP,GACG,gBAAKU,IAAG,0CAAqCV,GAAeW,MAAM,MAAMC,IAAKX,KAC3E,gBAAKS,IAAKG,EAAYF,MAAM,MAAMC,IAAKX,QAEpC,UAAChB,EAAD,YACT,wCACA,uBAAIiB,KACJ,sCAAY,8BAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQW,KAAI,SAAAC,GAAE,OAAIA,EAAGd,IAAP,IAAae,KAAK,mBAEhD,oDACA,SAAC,IAAD,CAAepB,MAAO,CAACF,KAAAA,GAAMuB,GAAG,OAAhC,mBACA,SAAC,IAAD,CAAerB,MAAO,CAACF,KAAAA,GAAOuB,GAAG,UAAjC,0BAEA,SAAC,KAAD,MAEX,C,wFCjDKC,GAAapC,EAAAA,EAAAA,IAAOqC,EAAAA,GAAPrC,CAAH,qFAMHsC,GAActC,EAAAA,EAAAA,IAAOuC,EAAAA,GAAPvC,CAAD,0pBAwB1B,K","sources":["components/Button.jsx","components/Container.jsx","components/FilmDetailsView.jsx","components/StyledLink.jsx"],"sourcesContent":["import styled from \"styled-components\"\nconst StyledButton = styled.button`\n   border: none;\n    border-radius: 4px;\n    box-sizing: border-box;\n    display: inline-block;\n    font-family: BlinkMacSystemFont,-apple-system,Arial,Segoe UI,Roboto,Helvetica,sans-serif;\n    margin: 15px;\n    outline: none;\n    position: relative;\n    text-align: center;\n    transition-duration: .2s;\n    transition-property: color,background-color,border-color;\n    transition-timing-function: ease-in-out; \n    color: grey;\n    background-color: orangered;\n    padding: 10px 20px;\n    border-radius: 0 3px 3px 0;\n    \n &:hover {\n    cursor: pointer;\n    background-color: #00a046;\n    color: #fff;\n  }\n`\nexport default StyledButton","import styled from \"styled-components\";\nconst StyledContainer=styled.div`\n   margin: 20px;\n\n`\nexport default StyledContainer","import { fetchMovieById } from \"./helpers/ApiService\" \nimport { useParams, Outlet, useNavigate, useLocation } from \"react-router-dom\"\nimport {StyledNavLink} from \"./StyledLink\"\nimport defaultImg from '../defaultImg.jpeg'\nimport StyledButton from \"./Button\"\nimport StyledContainer from \"./Container\"\nimport styled from \"styled-components\"\nimport useFetchAndLoading from \"./hooks/useFetchAndLoading\"\nimport Loader from \"./Loader\"\nconst StyledFlexContainer=styled.div`\n    display: flex;\n`\nconst StyledDescription=styled.div`\n    width: 300px;\n    margin: 30px;\n`\n\n const FilmDetailsView = () => {\n    const { filmId } = useParams()\n    const { data, isLoading } = useFetchAndLoading(fetchMovieById, filmId)\n    const navigate = useNavigate()\n    const location = useLocation()\n    const from = location.state?.from || '/'\n    const goBack = () => navigate(from)\n  \n    const {release_date,vote_average,title,poster_path,name,overview,genres}=data\n    const dateYears = release_date?.split('').slice(0, 4);\n    const userScore = String(vote_average * 10).slice(0, 2);\n\n     return (\n         <StyledContainer><StyledButton onClick={goBack}>goBack</StyledButton>\n             {isLoading&&<Loader/>}\n        {data &&<>\n            <StyledFlexContainer><div><h2>{title} ({dateYears})</h2>\n            <p>User Score : {userScore} %</p>\n\n            {poster_path ?\n                <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} width=\"300\" alt={name} />\n                : <img src={defaultImg} width=\"300\" alt={name} />\n                     }</div>\n                     <StyledDescription>\n            <h3>Overview :</h3>\n            <p>{overview}</p>\n            <b>Genres : <p>{genres?.map(el => el.name).join(' , ')}</p></b>\n            </StyledDescription></StyledFlexContainer> \n            <h3>Additional information</h3>\n            <StyledNavLink state={{from}}to='cast'>Cast</StyledNavLink>\n            <StyledNavLink state={{from}} to='reviews'> Reviews</StyledNavLink>\n          \n        </>}<Outlet/>    \n    </StyledContainer>)\n}\nexport default FilmDetailsView","import styled from \"styled-components\"\nimport { Link,NavLink } from \"react-router-dom\"\nconst StyledLink = styled(Link)`\n    color:#000;\n    &:hover{\n        color:orange;\n    }\n`\nexport const StyledNavLink=styled(NavLink)`\n      border: none;\n    border-radius: 4px;\n    box-sizing: border-box;\n    display: inline-block;\n    font-family: BlinkMacSystemFont,-apple-system,Arial,Segoe UI,Roboto,Helvetica,sans-serif;\n    margin: 15px;\n    outline: none;\n    position: relative;\n    text-align: center;\n    transition-duration: .2s;\n    transition-property: color,background-color,border-color;\n    transition-timing-function: ease-in-out; \n    color: grey;\n    background-color: orangered;\n    padding: 10px 20px;\n    border-radius: 0 3px 3px 0;\n    \n &:hover,&.active {\n    cursor: pointer;\n    background-color: #00a046;\n    color: #fff;\n  }\n`\nexport default StyledLink\n"],"names":["StyledButton","styled","StyledContainer","StyledFlexContainer","StyledDescription","filmId","useParams","useFetchAndLoading","fetchMovieById","data","isLoading","navigate","useNavigate","from","useLocation","state","release_date","vote_average","title","poster_path","name","overview","genres","dateYears","split","slice","userScore","String","onClick","src","width","alt","defaultImg","map","el","join","to","StyledLink","Link","StyledNavLink","NavLink"],"sourceRoot":""}